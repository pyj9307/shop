#애플리케이션 포트 설정
server.port = 80

#MySQL 연결 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/shopdb?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
#spring.datasource.url=jdbc:mysql://localhost:3306/shopdbtest?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=1234

#실행되는 쿼리 콘솔 출력
spring.jpa.properties.hibernate.show_sql=true

#콘솔창에 출력되는 쿼리를 가독성이 좋게 포맷팅
spring.jpa.properties.hibernate.format_sql=true

#쿼리에 물음표로 출력되는 바인드 파라미터 출력
logging.level.org.hibernate.type.descriptor.sql=trace

#create: 서버 실행 시 기존테이블 삭제 후 다시 생성, create-drop: create와 같으나 종료시점에 테이블 DROP, update: 변경분만 반영(운영DB에서는 사용하면 안됨), validate : 엔티티와 테이블이 정상 매핑되었는지 확인, none : 사용하지 않음(사실상 없는 값이지만 관례상 none이라고 함)
spring.jpa.hibernate.ddl-auto=update
#MySQL8Dialect로 데이터 방언 설정
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

#Live Reload 기능 활성화(정적자원(js, css, html) 수정 시 새로고침 없이 바로 적용할 수 있습니다.
spring.devtools.livereload.enabled=true

#Thymeleaf cache 사용 중지
spring.thymeleaf.cache = false

#파일 한 개당 최대 사이즈
spring.servlet.multipart.maxFileSize=20MB
#요청당 최대 파일 크기
spring.servlet.multipart.maxRequestSize=100MB
#상품 이미지 업로드 경로
itemImgLocation=C:/shop/item
#리소스 업로드 경로
uploadPath=file:///C:/shop/

#기본 batch size 설정
spring.jpa.properties.hibernate.default_batch_fetch_size=1000